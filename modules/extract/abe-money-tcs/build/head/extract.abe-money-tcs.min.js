var g_headers={"User-Agent":"OnePlus ONEPLUS A3010/android: 9/TCSMB/5.2.1"},g_currency={RUB:"₽",USD:"$",EUR:"€",BYN:"Br",KZT:"₸",GBP:"£",CNY:"Ұ",undefined:""},g_system={MR:"МИР",MIR:"МИР",VI:"VISA",VISA:"VISA",MC:"MasterCard",MASTERCARD:"MasterCard",undefined:""},g_status={NORM:"Активен",ACTIVE:"Активен",CLOSED:"Закрыт",ARRESTED:"Арестован",BLOCKED:"Заблокирован",undefined:""},g_baseurl="https://api.tinkoff.ru/v1/",g_sessionid,g_postParams={mobile_device_model:"ONEPLUS A3010",mobile_device_os:"android",
appVersion:"5.2.1",screen_width:"1080",root_flag:"false",appName:"mobile",origin:"mobile,ib5,loyalty,platform",deviceId:void 0,connectionType:"WiFi",platform:"android",screen_dpi:"420",mobile_device_os_version:"9",screen_height:"1920",fingerprint:"OnePlus ONEPLUS A3010/android: 9/TCSMB/5.2.1###1080x1920x32###180###false###false###"};
function requestJson(b,a,c){var d=[];c||(c={});g_sessionid&&d.push(encodeURIComponent("sessionid")+"="+encodeURIComponent(g_sessionid));if(a)for(var e in a)d.push(encodeURIComponent(e)+"="+encodeURIComponent(a[e]));d.push(encodeURIComponent("appVersion")+"="+encodeURIComponent(g_postParams.appVersion));d.push(encodeURIComponent("platform")+"="+encodeURIComponent(g_postParams.platform));d.push(encodeURIComponent("origin")+"="+encodeURIComponent(g_postParams.origin));d.push(encodeURIComponent("connectionType")+
"="+encodeURIComponent(g_postParams.connectionType));d.push(encodeURIComponent("deviceId")+"="+encodeURIComponent(getDeviceId()));AnyBalance.trace("Запрос : "+b);a=c.post?AnyBalance.requestPost(g_baseurl+b+"?"+d.join("&"),c.post,g_headers):AnyBalance.requestGet(g_baseurl+b+"?"+d.join("&"),g_headers);a=getJson(a);AnyBalance.trace("Ответ: "+JSON.stringify(a));if("OK"!=a.resultCode&&!c.noException)throw AnyBalance.trace("Ошибка: "+b+", "+a.errorMessage),new AnyBalance.Error((c.scope?c.scope+": ":"")+
(a.plainMessage||a.errorMessage),null,/INVALID_REQUEST_DATA/i.test(a.resultCode));return a}var g_accountsJson,g_accountTransactions={};function requestAccountsJson(){g_accountsJson||(g_accountsJson=requestJson("accounts_flat"));return g_accountsJson}function getDataName(){return"tcs_"+AnyBalance.getPreferences().login}function createPass(b){for(var a="",c=0;c<b;++c)a+="0123456789abcdef".charAt(Math.floor(16*Math.random()));return a}
function getDeviceId(){var b=AnyBalance.getData(getDataName(),{});b.deviceid||(b.deviceid=createPass(16),AnyBalance.setData(getDataName(),b),AnyBalance.saveData());return b.deviceid}
function loginByPhone(){var b=AnyBalance.getPreferences(),a=requestJson("auth/by/phone",{},{post:joinObjects({phone:"+7"+b.login,deviceId:getDeviceId()},g_postParams),noException:!0});if("WAITING_CONFIRMATION"==a.resultCode){AnyBalance.trace("Необходимо привязать устройство...");if(0<=a.confirmations.indexOf("SMSBYID")){var c=AnyBalance.retrieveCode("Пожалуйста, введите код подтверждения из смс",null,{inputType:"number",time:18E4});AnyBalance.trace("Получили код: "+c);a=requestJson("confirm",{},{post:joinObjects({initialOperationTicket:a.operationTicket,
confirmationData:'{"SMSBYID":"'+c+'"}',initialOperation:"auth/by/phone",deviceId:getDeviceId()},g_postParams)})}else throw AnyBalance.trace(JSON.stringify(a)),new AnyBalance.Error("Потребовался неизвестный тип подтверждения входа");if("CANDIDATE"===a.payload.accessLevel){AnyBalance.trace("Необходим ещё и пароль");a=requestJson("auth/by/password",{},{post:joinObjects({password:b.password,deviceId:getDeviceId()},g_postParams)});if("CLIENT"!==a.payload.accessLevel)throw AnyBalance.trace(JSON.stringify(a)),
new AnyBalance.Error("Не удалось войти в кабинет с нужным уровнем доступа");b=createPass(64);c=getFormattedDate({format:"YYYY-MM-DD HH:NN:SS"});a=requestJson("auth/pin/set",{},{post:joinObjects({pinHash:b,auth_type_set_date:c,deviceId:getDeviceId()},g_postParams)});a=a.payload.key;var d=AnyBalance.getData(getDataName());AnyBalance.setData(getDataName(),joinObjects({key:a,pinHash:b,auth_type_set_date:c,oldSessionId:g_sessionid},d));AnyBalance.saveData()}}else if("OK"==a.resultCode)g_sessionid=a.payload.sessionid;
else throw new AnyBalance.Error(a.plainMessage||a.errorMessage,null,"AUTHENTICATION_FAILED"==a.resultCode);}
function loginByPin(){var b=AnyBalance.getData(getDataName());if(!b||!b.pinHash)return!1;try{var a=requestJson("auth/by/pin",{},{post:joinObjects({pinHash:b.pinHash,auth_type:"pin",auth_type_set_date:b.auth_type_set_date,oldSessionId:b.oldSessionId,deviceId:getDeviceId()},g_postParams)});if("CLIENT"!==a.payload.accessLevel)throw AnyBalance.trace(JSON.stringify(a)),new AnyBalance.Error("Не удалось войти в кабинет с нужным уровнем доступа");b.oldSessionId=g_sessionid;b.key=a.payload.key;AnyBalance.setData(getDataName(),
b);AnyBalance.saveData();return!0}catch(c){AnyBalance.trace("Не удалось зайти по пину: "+c.message);if(/Требуется привязка устройства|Неверный код доступа/i.test(c.message))return!1;throw c;}}
function login(){var b=AnyBalance.getPreferences();checkEmpty(b.login,"Введите ваш номер телефона!");checkEmpty(/^\d{10}$/.test(b.login),"Введите ваш номер телефона, 10 цифр без пробелов и разделителей, например, 9261234567 !");checkEmpty(b.password,"Введите пароль в интернет-банк!");if(g_sessionid)AnyBalance.trace("сессия уже установлена. Используем её.");else{g_sessionid=requestJson("auth/session",{},{post:joinObjects({phone:b.login,deviceId:getDeviceId()},g_postParams)}).payload.sessionid;var a=
AnyBalance.getData(getDataName(),{});requestJson("warmup_cache",{},{post:joinObjects({old_session_id:a.oldSessionId,phone:a.oldSessionId?void 0:"+7"+b.login,device_id:getDeviceId(),deviceId:getDeviceId()},g_postParams)});loginByPin()||loginByPhone();__setLoginSuccessful()}return g_sessionid}
function processCards(b){if(AnyBalance.isAvailable("cards")){for(var a=requestAccountsJson(),c=[],d=0;d<a.payload.length;d++){var e=a.payload[d];/Current|Credit/i.test(e.accountType)&&e.cardNumbers&&c.push(e)}AnyBalance.trace("Найдено "+c.length+" счетов с картами");b.cards=[];for(d=0;d<c.length;d++)for(e=c[d],a=0;a<e.cardNumbers.length;a++){var f=e.cardNumbers[a],g={__id:f.id,__name:f.name+", "+f.value,num:f.value,accid:e.id};__shouldProcess("cards",g)&&processCard(f,e,g);b.cards.push(g)}}}
function processCard(b,a,c){AnyBalance.trace("Обработка карты "+c.__name);var d=jspath1(b,"$.availableBalance")||jspath1(a,"$.moneyAmount")||jspath1(a,"$.accountBalance");getParam(jspath1(a,"$.accountBalance.value"),c,["cards.balance","cards.currency"]);getParam(jspath1(d,"$.value"),c,["cards.available","cards.currency"]);getParam(g_currency[jspath1(d,"$.currency.name")]||jspath1(d,"$.currency.name"),c,["cards.currency","cards.balance"]);getParam(jspath1(b,"$.expiration.milliseconds"),c,"cards.till");
getParam(jspath1(b,"$.activated"),c,"cards.active");getParam(jspath1(b,"$.primary"),c,"cards.primary");getParam(jspath1(b,"$.reissued"),c,"cards.reissued");getParam(jspath1(b,"$.status"),c,"cards.status");getParam(jspath1(b,"$.statusCode"),c,"cards.status_code");getParam(jspath1(b,"$.name"),c,"cards.name");getParam(g_system[jspath1(b,"$.paymentSystem")]||jspath1(b,"$.paymentSystem"),c,"cards.payment_system");getParam(jspath1(a,"$.externalAccountNumber"),c,"cards.accnum");AnyBalance.isAvailable("cards.transactions")&&
processCardsTransactions(c)}
function processCategories(b){if(AnyBalance.isAvailable("increasedcashback")){AnyBalance.trace("Пробуем получить данные по повышенному кэшбэку...");for(var a=requestJson("client_offer_essences"),c=0;c<a.payload.length;c++){var d=a.payload[c];if(d.essences&&0<d.essences.length)for(AnyBalance.trace("Найдено категорий: "+d.essences.length),c=0;c<d.essences.length;c++){var e=d.essences[c];jspath1(e,"$.isActive")&&sumParam(jspath1(e,"$.name")+": "+jspath1(e,"$.percent")+"%",b,"increasedcashback",null,
null,null,create_aggregate_join(",<br> "))}else AnyBalance.trace("Не удалось найти информацию по категориям месяца"),b.increasedcashback="Нет данных"}}}
function processAccounts(b){if(AnyBalance.isAvailable("accounts")){for(var a=requestAccountsJson(),c=[],d=0;d<a.payload.length;d++){var e=a.payload[d];/Current|Credit/i.test(e.accountType)&&c.push(e)}AnyBalance.trace("Найдено "+c.length+" счетов");b.accounts=[];for(d=0;d<c.length;d++)e=c[d],a={__id:e.id,__name:e.marketingName+(e.externalAccountNumber?", "+e.externalAccountNumber:""),num:e.externalAccountNumber},__shouldProcess("accounts",a)&&processAccount(e,a),b.accounts.push(a)}}
function processAccount(b,a){AnyBalance.trace("Обработка счета "+a.__name);var c=jspath1(b,"$.moneyAmount")||jspath1(b,"$.accountBalance");getParam(jspath1(b,"$.accountBalance.value"),a,["accounts.balance","accounts.currency"]);getParam(jspath1(b,"$.moneyAmount.value"),a,["accounts.available","accounts.currency"]);getParam(g_currency[jspath1(c,"$.currency.name")]||jspath1(c,"$.currency.name"),a,["accounts.currency","accounts.balance"]);getParam(jspath1(b,"$.creationDate.milliseconds"),a,"accounts.date_start");
getParam(jspath1(b,"$.accountGroup"),a,"accounts.type");getParam(jspath1(b,"$.accountType"),a,"accounts.type_code");getParam(jspath1(b,"$.authorizationsAmount.value"),a,"accounts.blocked");getParam(jspath1(b,"$.c2cOutLimitBorder.value"),a,"accounts.c2c_out_limit");getParam(jspath1(b,"$.defaultMonthlyCashLimit.value"),a,"accounts.free_cash_limit");getParam(jspath1(b,"$.defaultRenewalAmountLeft.value"),a,"accounts.free_add_limit");getParam(jspath1(b,"$.c2cOutLimit.value"),a,"accounts.c2c_out_left");
getParam(jspath1(b,"$.monthlyCashLimit.value"),a,"accounts.free_cash_left");getParam(jspath1(b,"$.renewalAmountLeft.value"),a,"accounts.free_add_left");getParam(jspath1(b,"$.rate"),a,"accounts.pct");getParam(g_status[jspath1(b,"$.status")]||jspath1(b,"$.status"),a,"accounts.status");getParam(jspath1(b,"$.creditLimit.value"),a,"accounts.limit");getParam(jspath1(b,"$.debtAmount.value"),a,"accounts.debt");getParam(jspath1(b,"$.currentRecommendedPayment.value"),a,"accounts.recompay");getParam(jspath1(b,
"$.currentMinimalPayment.value"),a,"accounts.minpay");getParam(jspath1(b,"$.duedate.milliseconds"),a,"accounts.minpay_till");getParam(jspath1(b,"$.marketingName"),a,"accounts.name");getParam(jspath1(b,"$.loyalty[0].amount"),a,"accounts.cashback");AnyBalance.isAvailable("accounts.transactions")&&processAccountsTransactions(a)}
function processDeposits(b){if(AnyBalance.isAvailable("deposits")){for(var a=requestAccountsJson(),c=[],d=0;d<a.payload.length;d++){var e=a.payload[d];/Deposit/i.test(e.accountType)&&c.push(e)}AnyBalance.trace("Найдено "+c.length+" депозитов");b.deposits=[];for(d=0;d<c.length;d++)e=c[d],a={__id:e.id,__name:(e.marketingName||e.name)+(e.externalAccountNumber?", "+e.externalAccountNumber:""),num:e.externalAccountNumber},__shouldProcess("deposits",a)&&processDeposit(e,a),b.deposits.push(a)}}
function processSavings(b){if(AnyBalance.isAvailable("savings")){for(var a=requestAccountsJson(),c=[],d=0;d<a.payload.length;d++){var e=a.payload[d];/Saving/i.test(e.accountType)&&c.push(e)}AnyBalance.trace("Найдено "+c.length+" сберегательных счетов");b.savings=[];for(d=0;d<c.length;d++)e=c[d],a={__id:e.id,__name:e.marketingName||e.name,num:e.externalAccountNumber},__shouldProcess("savings",a)&&processSaving(e,a),b.savings.push(a)}}
function processDeposit(b,a){AnyBalance.trace("Обработка депозита "+a.__name);getParam(jspath1(b,"$.accountType"),a,"deposits.type_code");getParam(jspath1(b,"$.marketingName"),a,"deposits.name");getParam(jspath1(b,"$.openDate.milliseconds"),a,"deposits.date_start");getParam(jspath1(b,"$.plannedCloseDate.milliseconds"),a,"deposits.till");getParam(jspath1(b,"$.lastBonusDate.milliseconds"),a,"deposits.date_bonus");getParam(jspath1(b,"$.lastReceiptDate.milliseconds"),a,"deposits.date_receipt");getParam(jspath1(b,
"$.lastRenewalDate.milliseconds"),a,"deposits.date_renewal");getParam(jspath1(b,"$.depositRate"),a,"deposits.pct");getParam(jspath1(b,"$.effectiveRate"),a,"deposits.pct_cap");getParam(jspath1(b,"$.replenishRate"),a,"deposits.pct_topup");getParam(jspath1(b,"$.interest.value"),a,"deposits.pct_sum");getParam(jspath1(b,"$.typeOfInterest"),a,"deposits.pct_condition");getParam(jspath1(b,"$.moneyAmount.value"),a,["deposits.balance","deposits.currency"]);getParam(g_currency[jspath1(b,"$.moneyAmount.currency.name")]||
jspath1(b,"$.moneyAmount.currency.name"),a,["deposits.currency","deposits.balance"]);getParam(jspath1(b,"$.startAmount"),a,["deposits.balance_start","deposits.currency"]);getParam(jspath1(b,"$.period"),a,"deposits.period");getParam(g_status[jspath1(b,"$.status")]||jspath1(b,"$.status"),a,"deposits.status");AnyBalance.isAvailable("deposits.accnum")&&(b=findAccountById(jspath1(b,"$.currentLinkedAccount")))&&getParam(jspath1(b,"$.externalAccountNumber"),a,"deposits.accnum");AnyBalance.isAvailable("deposits.transactions")&&
processDepositsTransactions(a)}
function processSaving(b,a){AnyBalance.trace("Обработка накопительного счета "+a.__name);getParam(jspath1(b,"$.accountType"),a,"savings.type_code");getParam(jspath1(b,"$.marketingName"),a,"savings.name");getParam(jspath1(b,"$.creationDate.milliseconds"),a,"savings.date_start");getParam(jspath1(b,"$.interest.value"),a,"savings.pct_sum");getParam(jspath1(b,"$.rate")||jspath1(b,"$.tariffInfo.interestRate"),a,"savings.pct");getParam(jspath1(b,"$.accountBalance.value"),a,["savings.balance","savings.currency"]);
getParam(jspath1(b,"$.moneyAmount.value"),a,["savings.available","savings.currency"]);getParam(g_currency[jspath1(b,"$.moneyAmount.currency.name")]||jspath1(b,"$.moneyAmount.currency.name"),a,["savings.currency","savings.balance"]);getParam(g_status[jspath1(b,"$.status")]||jspath1(b,"$.status"),a,"savings.status");AnyBalance.isAvailable("savings.transactions")&&processSavingsTransactions(a)}
function findAccountById(b){for(var a=requestAccountsJson(),c=0;c<a.payload.length;c++){var d=a.payload[c];if(d.id==b)return d}}function findCardById(b){for(var a=requestAccountsJson(),c=0;c<a.payload.length;c++)for(var d=a.payload[c],e=0;d.cardNumbers&&e<d.cardNumbers.length;e++){var f=d.cardNumbers[e];if(f.id==b)return f}}
function fetchSaving(b,a,c){AnyBalance.getPreferences();b=b.payload.reduce(function(d,e){return d.concat(e.accounts.filter(function(f){return/Saving/i.test(f.accountType)}))},[]);if(!b.length)throw new AnyBalance.Error("У вас нет ни одного накопительного счета!");b=b[0];a={success:!0};getParam(b.moneyAmount.value,a,"balance");getParam(g_currency[b.moneyAmount.currency.name]||b.moneyAmount.currency.name,a,["currency","balance"]);getParam(b.nextStatementDate.milliseconds,a,"nextStatementDate");getParam(b.name,
a,"name");getParam(b.name,a,"__tariff");AnyBalance.setResult(a)};
